generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"] // サーバー(Node)上だけ動く
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Anpan {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Sample {
  id        Int      @id @default(autoincrement())
  username  String   @default(cuid())
  email     String   @default(uuid())
  createdAt DateTime @default(now())
  price     Float    @default(0.99)
}

// 一対一
model User2 {
  id      Int       @id @default(autoincrement())
  name    String
  email   String    @unique
  profile Profile2?
}

model Profile2 {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User2   @relation(fields: [userId], references: [id])
  userId Int     @unique
}

// 一対多
model User3 {
  id    Int     @id @default(autoincrement())
  name  String
  posts Post3[]
}

model Post3 {
  id       Int    @id @default(autoincrement())
  title    String
  author   User3  @relation(fields: [authorId], references: [id])
  authorId Int
}

model Course {
  id          String                     @id @default(cuid())
  name        String                     @unique
  description String?
  url         String?
  imageUrl    String?
  article     String?
  courseIds   String?
  curriculums CourseCurriculumRelation[]
}

model Curriculum {
  id          String                     @id @default(cuid())
  name        String                     @unique
  description String?
  level       Int                        @default(1)
  courses     CourseCurriculumRelation[]
}

// 順番の番号も必要
model CourseCurriculumRelation {
  course       Course     @relation(fields: [courseId], references: [id])
  courseId     String
  curriculum   Curriculum @relation(fields: [curriculumId], references: [id])
  curriculumId String
  order        Int // @default(0)

  @@id([courseId, curriculumId])
  @@unique([courseId, order])
}
