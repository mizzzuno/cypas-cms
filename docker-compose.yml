version: '3.9'
services:
  app:
    ports:
      - 8002:8002
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    tty: true # コンテナを起動しっぱなしにする。
    volumes:
      - ./frontend:/app # フォルダを同期
      - ./.env:/app/.env
      - ./.env.local:/app/.env.local
      - node_modules:/app/node_modules # node_modules, .nextはボリュームに保存
      - next_data:/app/.next
    environment:
      - WATCHPACK_POLLING=true # ホットリロード（同期に必要）
    command: >
      bash -c "
      yarn prisma migrate dev --name init &&
      yarn &&
      yarn dev
      "
    depends_on: # db必須のフロント, dbコンテナが先に立つ
      - db
    restart: on-failure # 失敗したら再度コンテナを建てる
  db:
    image: 'postgres:latest'
    expose:
      - 5432 # 他コンテナからアクセスできるポート番号
    tty: true
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-db:/var/lib/postgresql/data
  minio:
    image: minio/minio:latest
    command: ['server', '/data', '--console-address', ':9090']
    volumes:
      - 'minio:/data'
    environment:
      - MINIO_ROOT_USER=minio_root
      - MINIO_ROOT_PASSWORD=minio_password
    ports:
      - '8003:9000'
      - '9090:9090'
  # bucketsを作るためのコンテナ
  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    # imagesというどこからでもアクセスできるBucketsを作成
    entrypoint: >
      /bin/sh -c "
      mc alias set my_minio http://minio:9000 minio_root minio_password;
      mc mb --ignore-existing my_minio/images;
      mc anonymous set public my_minio/images;
      "
volumes:
  postgres-db:
  node_modules:
  next_data:
  minio:
    driver: local
